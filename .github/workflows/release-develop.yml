name: Build release candidate

on:
  push:
    branches:
      - v2-develop

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.version.outputs.pe-version }}
      tag-already-exists: ${{ steps.checkTag.outputs.exists }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get version
        id: version
        run: echo "pe-version=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)-rc" >> $GITHUB_OUTPUT

      - name: Print version
        run: echo ${{ steps.version.outputs.pe-version }}

      - uses: mukunku/tag-exists-action@v1.2.0
        id: checkTag
        with:
          tag: ${{ steps.version.outputs.pe-version }}

      - if: ${{ steps.checkTag.outputs.exists == 'true' }}
        name: "Skip release"
        run: echo "Nothing to tag/release, the release ${{ steps.version.outputs.pe-version }} already exists"

  create-release:
    needs: check-version
    runs-on: ubuntu-latest
    if: ${{ needs.check-version.outputs.tag-already-exists == 'false' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check-version.outputs.release-version }}
          target_commitish: ${{ github.head_ref || github.ref }}
          generate_release_notes: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-release:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
        id: extract_branch

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build PE
        run: mvn package --no-transfer-progress

      - name: Upload PE jar
        uses: actions/upload-artifact@v3
        with:
          name: pe-jar
          path: target/*.jar

  docker:
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download PE jar
        uses: actions/download-artifact@v3
        with:
          name: pe-jar
          path: target/

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: inseefr/public-enemy-back-office
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          tags: "latest, ${{ needs.check-version.outputs.release-version }}"
